GIT GET STARTED:

1. Insert the missing part of the command to check which version of Git (if any) is installed.
git --version

2. Initialize Git on the current folder:
git init

3. Set the user name for the current repository to "w3schools-test":
git config user.name "w3schools-test"

GIT NEW FILES:

1. Check the status of the Git:
git status

GIT STAGING ENVIRONMENT:

1. Add index.html to the Staging Enviornment:
git add index.html

2. Stage all new, modified, and deleted files. Use the shorthand command:
git add -A or git add --all

GIT COMMIT:

1. Commit the changes to the current repository with the message "First release!"
git commit -m "First release!"

2. Check the compact version of the status for repository:
git status --short

3. Commit the updated files directly, skipping the staging environment:
git commit -a -m "New line added"

4. View the history of commits for the repository:
git log

GIT HELP:

1. Show the possible options for the status command in command line:
git status --help

2. Show all git possible commands in command line:
git help --all

GIT BRANCH:

1. Create a new branch called hello-world-images:
git branch hello-world-images

2. List the existing branches:
git branch

3. Move to the hello-world-images branch:
git checkout hello-world-images

4. Create, and move to a new branch with the name hello-you:
git checkout -b hello-you

GIT BRANCH MERGE:

1. Merge the hello-you branch with the current branch:
git merge hello-you

2. Remove the hello-you branch from the local repository:
git branch -d hello-you